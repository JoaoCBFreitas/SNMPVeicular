/*
 * Note: this file originally auto-generated by mib2c
 * using mib2c.array-user.conf
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef ERRORDESCRIPTIONTABLE_H
#define ERRORDESCRIPTIONTABLE_H

#ifdef __cplusplus
extern "C"
{
#endif

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>
#define MAXSNMPSTRINGSIZE 65525
    typedef struct errorDescrStruct
    {
        int errorDescrID;
        char *errorDescr;
        int errorCode;
    } errorDescrStruct;
    /** Index errorDescrID is internal */
    typedef struct errorDescrList
    {
        int capacity;
        int current;
        errorDescrStruct *errorList;
    } errorDescrList;

    typedef struct errorDescriptionTable_context_s
    {
        netsnmp_index index; /** THIS MUST BE FIRST!!! */
        oid oid_buf[2];
        unsigned long errorDescrID;                 /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned char errorDescr[MAXSNMPSTRINGSIZE];/** OCTETSTR = ASN_OCTET_STR */
        long errorDescr_len;                        /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned long errorCode;
        int valid;
        void *data;
    } errorDescriptionTable_context;

    /*************************************************************
 * function declarations
 */
    void init_errorDescriptionTable(errorDescrList *);
    void initialize_table_errorDescriptionTable(void);
    const errorDescriptionTable_context *errorDescriptionTable_get_by_idx(netsnmp_index *);
    const errorDescriptionTable_context *errorDescriptionTable_get_by_idx_rs(netsnmp_index *,
                                                                             int row_status);
    int errorDescriptionTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);

    /*************************************************************
 * oid declarations
 */
    extern const oid errorDescriptionTable_oid[];
    extern const size_t errorDescriptionTable_oid_len;

#define errorDescriptionTable_TABLE_OID 1, 3, 6, 1, 3, 8888, 11

/*************************************************************
 * column number definitions for table errorDescriptionTable
 */
#define COLUMN_ERRORDESCRID 1
#define COLUMN_ERRORDESCR 2
#define COLUMN_ERRORCODE 3
#define errorDescriptionTable_COL_MIN 1
#define errorDescriptionTable_COL_MAX 3

/* comment out the following line if you don't handle SET-REQUEST for errorDescriptionTable */
#define errorDescriptionTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define errorDescriptionTable_ROW_CREATION

    /* comment out the following line if you don't want the secondary index */
    /* #define errorDescriptionTable_IDX2  */

#ifdef errorDescriptionTable_SET_HANDLING

    int
    errorDescriptionTable_extract_index(errorDescriptionTable_context *ctx, netsnmp_index *hdr);

    void errorDescriptionTable_set_reserve1(netsnmp_request_group *);
    void errorDescriptionTable_set_reserve2(netsnmp_request_group *);
    void errorDescriptionTable_set_action(netsnmp_request_group *);
    void errorDescriptionTable_set_commit(netsnmp_request_group *);
    void errorDescriptionTable_set_free(netsnmp_request_group *);
    void errorDescriptionTable_set_undo(netsnmp_request_group *);
    int errorDescriptionTable_row_copy(errorDescriptionTable_context *, errorDescriptionTable_context *);
    errorDescriptionTable_context *errorDescriptionTable_duplicate_row(errorDescriptionTable_context *);
    netsnmp_index *errorDescriptionTable_delete_row(errorDescriptionTable_context *);

    int errorDescriptionTable_can_delete(errorDescriptionTable_context *undo_ctx,
                                         errorDescriptionTable_context *row_ctx,
                                         netsnmp_request_group *rg);

#ifdef errorDescriptionTable_ROW_CREATION
    errorDescriptionTable_context *errorDescriptionTable_create_row(netsnmp_index *, errorDescrStruct);
#endif
#endif

#ifdef errorDescriptionTable_IDX2
    errorDescriptionTable_context *errorDescriptionTable_get(const char *name, int len);
#endif

#ifdef __cplusplus
}
#endif

#endif /** ERRORDESCRIPTIONTABLE_H */
