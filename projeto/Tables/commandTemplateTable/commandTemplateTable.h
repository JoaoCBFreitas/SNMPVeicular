/*
 * Note: this file originally auto-generated by mib2c
 * using mib2c.array-user.conf
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef COMMANDTEMPLATETABLE_H
#define COMMANDTEMPLATETABLE_H

#ifdef __cplusplus
extern "C"
{
#endif

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>
#define MAXSNMPSTRINGSIZE 65525
    /** Index commandTemplateID is internal */

    typedef struct commandTemplateTable_context_s
    {
        netsnmp_index index; /** THIS MUST BE FIRST!!! */
        oid oid_buf[2];
        unsigned long commandTemplateID;                     /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned char commandDescription[MAXSNMPSTRINGSIZE]; /** OCTETSTR = ASN_OCTET_STR */
        long commandDescription_len;
        unsigned char targetNode[MAXSNMPSTRINGSIZE]; /** OCTETSTR = ASN_OCTET_STR */
        long targetNode_len;
        unsigned char commandTemplate[MAXSNMPSTRINGSIZE]; /** OCTETSTR = ASN_OCTET_STR */
        long commandTemplate_len;

        void *data;
        int valid;

    } commandTemplateTable_context;

    /*************************************************************
 * function declarations
 */
    void init_commandTemplateTable(void);
    void initialize_table_commandTemplateTable(void);
    const commandTemplateTable_context *commandTemplateTable_get_by_idx(netsnmp_index *);
    const commandTemplateTable_context *commandTemplateTable_get_by_idx_rs(netsnmp_index *,
                                                                           int row_status);
    int commandTemplateTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);
    void *getTemplateEntry(long unsigned int id);
    /*************************************************************
 * oid declarations
 */
    extern const oid commandTemplateTable_oid[];
    extern const size_t commandTemplateTable_oid_len;

#define commandTemplateTable_TABLE_OID 1, 3, 6, 1, 3, 8888, 11

/*************************************************************
 * column number definitions for table commandTemplateTable
 */
#define COLUMN_COMMANDTEMPLATEID 1
#define COLUMN_COMMANDDESCRIPTIONID 2
#define COLUMN_TARGETNODE 3
#define COLUMN_COMMANDTEMPLATE 4
#define commandTemplateTable_COL_MIN 1
#define commandTemplateTable_COL_MAX 4

/* comment out the following line if you don't handle SET-REQUEST for commandTemplateTable */
#define commandTemplateTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define commandTemplateTable_ROW_CREATION

    /* comment out the following line if you don't want the secondary index */
    /* #define commandTemplateTable_IDX2  */

#ifdef commandTemplateTable_SET_HANDLING

    int commandTemplateTable_extract_index(commandTemplateTable_context *ctx, netsnmp_index *hdr);

    void commandTemplateTable_set_reserve1(netsnmp_request_group *);
    void commandTemplateTable_set_reserve2(netsnmp_request_group *);
    void commandTemplateTable_set_action(netsnmp_request_group *);
    void commandTemplateTable_set_commit(netsnmp_request_group *);
    void commandTemplateTable_set_free(netsnmp_request_group *);
    void commandTemplateTable_set_undo(netsnmp_request_group *);
    int commandTemplateTable_row_copy(commandTemplateTable_context *, commandTemplateTable_context *);
    commandTemplateTable_context *commandTemplateTable_duplicate_row(commandTemplateTable_context *);
    netsnmp_index *commandTemplateTable_delete_row(commandTemplateTable_context *);

    int commandTemplateTable_can_delete(commandTemplateTable_context *undo_ctx,
                                        commandTemplateTable_context *row_ctx,
                                        netsnmp_request_group *rg);

#ifdef commandTemplateTable_ROW_CREATION
    commandTemplateTable_context *commandTemplateTable_create_row(netsnmp_index *, char *descr, int id, char *target, char *template);
#endif
#endif

#ifdef commandTemplateTable_IDX2
    commandTemplateTable_context *commandTemplateTable_get(const char *name, int len);
#endif

#ifdef __cplusplus
}
#endif

#endif /** COMMANDTEMPLATETABLE_H */
