/*
 * Note: this file originally auto-generated by mib2c
 * using mib2c.array-user.conf
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef REQUESTSTATISTICSDATATABLE_H
#define REQUESTSTATISTICSDATATABLE_H

#ifdef __cplusplus
extern "C"
{
#endif

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>
    typedef struct statisticsStruct
    {
        int statID;
        int savingMode;
        char *startTime;
        char *endTime;
        char *duration;
        int nOfSamples;
        int minValue;
        int maxValue;
        int avgValue;
        int status;

    } statisticsStruct;

    /** Index statisticsID is internal */

    typedef struct requestStatisticsDataTable_context_s
    {
        netsnmp_index index; /** THIS MUST BE FIRST!!! */
        oid oid_buf[2];
        unsigned long statisticsID;               /** UNSIGNED32 = ASN_UNSIGNED */
        long savingModeStatistics;                /** INTEGER = ASN_INTEGER */
        unsigned char startTimeStatistics[65535]; /** OBUDateandTime = ASN_OCTET_STR */
        long startTimeStatistics_len;
        unsigned char endTimeStatistics[65535]; /** OBUDateandTime = ASN_OCTET_STR */
        long endTimeStatistics_len;
        unsigned char durationTimeStatistics[65535]; /** OBUDateandTime = ASN_OCTET_STR */
        long durationTimeStatistics_len;
        unsigned long nOfSamplesStatistics; /** COUNTER = ASN_COUNTER */
        long minValue;                      /** INTEGER = ASN_INTEGER */
        long maxValue;                      /** INTEGER = ASN_INTEGER */
        long avgValue;                      /** INTEGER = ASN_INTEGER */
        long statusStatistics;              /** INTEGER = ASN_INTEGER */
        void *data;
        int valid;

    } requestStatisticsDataTable_context;

    /*************************************************************
 * function declarations
 */
    void init_requestStatisticsDataTable(void);
    void initialize_table_requestStatisticsDataTable(void);
    const requestStatisticsDataTable_context *requestStatisticsDataTable_get_by_idx(netsnmp_index *);
    const requestStatisticsDataTable_context *requestStatisticsDataTable_get_by_idx_rs(netsnmp_index *,
                                                                                       int row_status);
    int requestStatisticsDataTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);

    /*************************************************************
 * oid declarations
 */
    extern const oid requestStatisticsDataTable_oid[];
    extern const size_t requestStatisticsDataTable_oid_len;

#define requestStatisticsDataTable_TABLE_OID 1, 3, 6, 1, 3, 8888, 3

/*************************************************************
 * column number definitions for table requestStatisticsDataTable
 */
#define COLUMN_STATISTICSID 1
#define COLUMN_SAVINGMODESTATISTICS 2
#define COLUMN_STARTTIMESTATISTICS 3
#define COLUMN_ENDTIMESTATISTICS 4
#define COLUMN_DURATIONTIMESTATISTICS 5
#define COLUMN_NOFSAMPLESSTATISTICS 6
#define COLUMN_MINVALUE 7
#define COLUMN_MAXVALUE 8
#define COLUMN_AVGVALUE 9
#define COLUMN_STATUSSTATISTICS 10
#define requestStatisticsDataTable_COL_MIN 1
#define requestStatisticsDataTable_COL_MAX 10

/* comment out the following line if you don't handle SET-REQUEST for requestStatisticsDataTable */
#define requestStatisticsDataTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define requestStatisticsDataTable_ROW_CREATION

    /* comment out the following line if you don't want the secondary index */
    /* #define requestStatisticsDataTable_IDX2  */

#ifdef requestStatisticsDataTable_SET_HANDLING

    int requestStatisticsDataTable_extract_index(requestStatisticsDataTable_context *ctx, netsnmp_index *hdr);

    void requestStatisticsDataTable_set_reserve1(netsnmp_request_group *);
    void requestStatisticsDataTable_set_reserve2(netsnmp_request_group *);
    void requestStatisticsDataTable_set_action(netsnmp_request_group *);
    void requestStatisticsDataTable_set_commit(netsnmp_request_group *);
    void requestStatisticsDataTable_set_free(netsnmp_request_group *);
    void requestStatisticsDataTable_set_undo(netsnmp_request_group *);
    int requestStatisticsDataTable_row_copy(requestStatisticsDataTable_context *, requestStatisticsDataTable_context *);
    requestStatisticsDataTable_context *requestStatisticsDataTable_duplicate_row(requestStatisticsDataTable_context *);
    netsnmp_index *requestStatisticsDataTable_delete_row(requestStatisticsDataTable_context *);

    int requestStatisticsDataTable_can_delete(requestStatisticsDataTable_context *undo_ctx,
                                              requestStatisticsDataTable_context *row_ctx,
                                              netsnmp_request_group *rg);

#ifdef requestStatisticsDataTable_ROW_CREATION
    requestStatisticsDataTable_context *requestStatisticsDataTable_create_row(netsnmp_index *, statisticsStruct *);
#endif
#endif

#ifdef requestStatisticsDataTable_IDX2
    requestStatisticsDataTable_context *requestStatisticsDataTable_get(const char *name, int len);
#endif

#ifdef __cplusplus
}
#endif

#endif /** REQUESTSTATISTICSDATATABLE_H */
