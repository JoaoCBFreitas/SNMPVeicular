/*
 * Note: this file originally auto-generated by mib2c
 * using mib2c.array-user.conf
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef CAPABILITIESTABLE_H
#define CAPABILITIESTABLE_H

#ifdef __cplusplus
extern "C"
{
#endif

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

    /** Index capabilitiesID is internal */

    typedef struct capabilitiesTable_context_s
    {
        netsnmp_index index; /** THIS MUST BE FIRST!!! */
        oid oid_buf[2];
        unsigned long capabilitiesID;          /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned long setOfCapabilitiesID;     /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned long specificCapabilitiesID;  /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned char capabilitieValue[65535]; /** OCTETSTR = ASN_OCTET_STR */
        long capabilitieValue_len;

        void *data;
        int valid;

    } capabilitiesTable_context;

    /*************************************************************
 * function declarations
 */
    void init_capabilitiesTable(void);
    void initialize_table_capabilitiesTable(void);
    const capabilitiesTable_context *capabilitiesTable_get_by_idx(netsnmp_index *);
    const capabilitiesTable_context *capabilitiesTable_get_by_idx_rs(netsnmp_index *,
                                                                     int row_status);
    int capabilitiesTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);

    /*************************************************************
 * oid declarations
 */
    extern const oid capabilitiesTable_oid[];
    extern const size_t capabilitiesTable_oid_len;

#define capabilitiesTable_TABLE_OID 1, 3, 6, 1, 3, 8888, 4

/*************************************************************
 * column number definitions for table capabilitiesTable
 */
#define COLUMN_CAPABILITIESID 1
#define COLUMN_SETOFCAPABILITIESID 2
#define COLUMN_SPECIFICCAPABILITIESID 3
#define COLUMN_CAPABILITIEVALUE 4
#define capabilitiesTable_COL_MIN 1
#define capabilitiesTable_COL_MAX 4

/* comment out the following line if you don't handle SET-REQUEST for capabilitiesTable */
#define capabilitiesTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define capabilitiesTable_ROW_CREATION

    /* comment out the following line if you don't want the secondary index */
    /* #define capabilitiesTable_IDX2  */

#ifdef capabilitiesTable_SET_HANDLING

    int capabilitiesTable_extract_index(capabilitiesTable_context *ctx, netsnmp_index *hdr);

    void capabilitiesTable_set_reserve1(netsnmp_request_group *);
    void capabilitiesTable_set_reserve2(netsnmp_request_group *);
    void capabilitiesTable_set_action(netsnmp_request_group *);
    void capabilitiesTable_set_commit(netsnmp_request_group *);
    void capabilitiesTable_set_free(netsnmp_request_group *);
    void capabilitiesTable_set_undo(netsnmp_request_group *);
    int capabilitiesTable_row_copy(capabilitiesTable_context *, capabilitiesTable_context *);
    capabilitiesTable_context *capabilitiesTable_duplicate_row(capabilitiesTable_context *);
    netsnmp_index *capabilitiesTable_delete_row(capabilitiesTable_context *);

    int capabilitiesTable_can_delete(capabilitiesTable_context *undo_ctx,
                                     capabilitiesTable_context *row_ctx,
                                     netsnmp_request_group *rg);

#ifdef capabilitiesTable_ROW_CREATION
    capabilitiesTable_context *capabilitiesTable_create_row(netsnmp_index *, char *, int, int, int);
#endif
#endif

#ifdef capabilitiesTable_IDX2
    capabilitiesTable_context *capabilitiesTable_get(const char *name, int len);
#endif

#ifdef __cplusplus
}
#endif

#endif /** CAPABILITIESTABLE_H */
