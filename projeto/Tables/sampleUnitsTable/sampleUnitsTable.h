/*
 * Note: this file originally auto-generated by mib2c
 * using mib2c.array-user.conf
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef SAMPLEUNITSTABLE_H
#define SAMPLEUNITSTABLE_H

#ifdef __cplusplus
extern "C"
{
#endif

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>

    typedef struct sampleUnitsStruct
    {
        int id;
        long message;
        char *unit;
    } sampleUnitsStruct;
    typedef struct sampleUnitsList
    {
        int capacity;
        int current;
        sampleUnitsStruct *list;
    } sampleUnitsList;
    /** Index sampleUnitID is internal */

    typedef struct sampleUnitsTable_context_s
    {
        netsnmp_index index;                  /** THIS MUST BE FIRST!!! */
        oid oid_buf[2];                       /* We don't have OIDs longer than 2, so we'll just use a short buffer */
        unsigned long sampleUnitID;           /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned char unitDescription[65535]; /** OCTETSTR = ASN_OCTET_STR */
        long unitDescription_len;
        void *data;
        int valid;
    } sampleUnitsTable_context;

    /*************************************************************
 * function declarations
 */
    void init_sampleUnitsTable(sampleUnitsList *);
    void initialize_table_sampleUnitsTable(void);
    const sampleUnitsTable_context *sampleUnitsTable_get_by_idx(netsnmp_index *);
    const sampleUnitsTable_context *sampleUnitsTable_get_by_idx_rs(netsnmp_index *,
                                                                   int row_status);
    int sampleUnitsTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);

    /*************************************************************
 * oid declarations
 */
    extern const oid sampleUnitsTable_oid[];
    extern const size_t sampleUnitsTable_oid_len;

#define sampleUnitsTable_TABLE_OID 1, 3, 6, 1, 3, 8888, 8

/*************************************************************
 * column number definitions for table sampleUnitsTable
 */
#define COLUMN_SAMPLEUNITID 1
#define COLUMN_UNITDESCRIPTION 2
#define sampleUnitsTable_COL_MIN 1
#define sampleUnitsTable_COL_MAX 2

/* comment out the following line if you don't handle SET-REQUEST for sampleUnitsTable */
#define sampleUnitsTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define sampleUnitsTable_ROW_CREATION

    /* comment out the following line if you don't want the secondary index */
    /* #define sampleUnitsTable_IDX2  */

#ifdef sampleUnitsTable_SET_HANDLING

    int sampleUnitsTable_extract_index(sampleUnitsTable_context *ctx, netsnmp_index *hdr);

    void sampleUnitsTable_set_reserve1(netsnmp_request_group *);
    void sampleUnitsTable_set_reserve2(netsnmp_request_group *);
    void sampleUnitsTable_set_action(netsnmp_request_group *);
    void sampleUnitsTable_set_commit(netsnmp_request_group *);
    void sampleUnitsTable_set_free(netsnmp_request_group *);
    void sampleUnitsTable_set_undo(netsnmp_request_group *);
    int sampleUnitsTable_row_copy(sampleUnitsTable_context *, sampleUnitsTable_context *);
    sampleUnitsTable_context *sampleUnitsTable_duplicate_row(sampleUnitsTable_context *);
    netsnmp_index *sampleUnitsTable_delete_row(sampleUnitsTable_context *);

    int sampleUnitsTable_can_delete(sampleUnitsTable_context *undo_ctx,
                                    sampleUnitsTable_context *row_ctx,
                                    netsnmp_request_group *rg);

#ifdef sampleUnitsTable_ROW_CREATION
    sampleUnitsTable_context *sampleUnitsTable_create_row(netsnmp_index *, char *, int);
#endif
#endif

#ifdef sampleUnitsTable_IDX2
    sampleUnitsTable_context *sampleUnitsTable_get(const char *name, int len);
#endif

#ifdef __cplusplus
};
#endif

#endif /** SAMPLEUNITSTABLE_H */
