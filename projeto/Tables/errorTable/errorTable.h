/*
 * Note: this file originally auto-generated by mib2c
 * using mib2c.array-user.conf
 *
 * Yes, there is lots of code here that you might not use. But it is much
 * easier to remove code than to add it!
 */
#ifndef ERRORTABLE_H
#define ERRORTABLE_H

#ifdef __cplusplus
extern "C"
{
#endif

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/library/container.h>
#include <net-snmp/agent/table_array.h>
#include "../../auxFunc.h"
#define MAXSNMPSTRINGSIZE 65525
    typedef struct errorStruct
    {
        int errorID;
        char *errorTimeStamp;
        int errorDescriptionID;
        char *errorUser;
        char *errorExpireTime;
    } errorStruct;
    /** Index errorID is internal */
    typedef struct errorTable_context_s
    {
        netsnmp_index index; /** THIS MUST BE FIRST!!! */
        oid oid_buf[2];
        unsigned long errorID;                           /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned char errorTimeStamp[MAXSNMPSTRINGSIZE]; /** OBUDateandTime = ASN_OCTET_STR */
        long errorTimeStamp_len;
        unsigned long errorDescriptionID;           /** UNSIGNED32 = ASN_UNSIGNED */
        unsigned char errorUser[MAXSNMPSTRINGSIZE]; /** OCTET STRING = ASN_OCTET_STR */
        long errorUser_len;
        unsigned char errorExpireTime[MAXSNMPSTRINGSIZE]; /** OCTET STRING = ASN_OCTET_STR */
        long errorExpireTime_len;
        int valid;
        void *data;

    } errorTable_context;

    /*************************************************************
 * function declarations
 */
    void init_errorTable(void);
    void initialize_table_errorTable(void);
    const errorTable_context *errorTable_get_by_idx(netsnmp_index *);
    const errorTable_context *errorTable_get_by_idx_rs(netsnmp_index *,
                                                       int row_status);
    int errorTable_get_value(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);
    int addError(char *user, int id);
    void checkError();
    /*************************************************************
 * oid declarations
 */
    extern const oid errorTable_oid[];
    extern const size_t errorTable_oid_len;

#define errorTable_TABLE_OID 1, 3, 6, 1, 3, 8888, 9

/*************************************************************
 * column number definitions for table errorTable
 */
#define COLUMN_ERRORID 1
#define COLUMN_ERRORTIMESTAMP 2
#define COLUMN_ERRORDESCRIPTIONID 3
#define COLUMN_ERRORUSER 4
#define COLUMN_ERROREXPIRETIME 5
#define errorTable_COL_MIN 1
#define errorTable_COL_MAX 5

/* comment out the following line if you don't handle SET-REQUEST for errorTable */
#define errorTable_SET_HANDLING

/* comment out the following line if you can't create new rows */
#define errorTable_ROW_CREATION

    /* comment out the following line if you don't want the secondary index */
    /* #define errorTable_IDX2  */

#ifdef errorTable_SET_HANDLING

    int errorTable_extract_index(errorTable_context *ctx, netsnmp_index *hdr);

    void errorTable_set_reserve1(netsnmp_request_group *);
    void errorTable_set_reserve2(netsnmp_request_group *);
    void errorTable_set_action(netsnmp_request_group *);
    void errorTable_set_commit(netsnmp_request_group *);
    void errorTable_set_free(netsnmp_request_group *);
    void errorTable_set_undo(netsnmp_request_group *);
    int errorTable_row_copy(errorTable_context *, errorTable_context *);
    errorTable_context *errorTable_duplicate_row(errorTable_context *);
    netsnmp_index *errorTable_delete_row(errorTable_context *);

    int errorTable_can_delete(errorTable_context *undo_ctx,
                              errorTable_context *row_ctx,
                              netsnmp_request_group *rg);

#ifdef errorTable_ROW_CREATION
    errorTable_context *errorTable_create_row(netsnmp_index *, errorStruct *);
#endif
#endif

#ifdef errorTable_IDX2
    errorTable_context *errorTable_get(const char *name, int len);
#endif

#ifdef __cplusplus
}
#endif

#endif /** ERRORTABLE_H */
